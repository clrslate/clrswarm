name: Build and Push Docker Image to ACR

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

# Ensure only one workflow runs at a time for the same branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Change these values to match your Azure Container Registry
  REGISTRY: clrslatepublic.azurecr.io
  IMAGE_NAME: containers/clrswarm
  ACR_NAME: clrslatepublic
  DOCKERFILE_PATH: src/ClrSlate.Swarm/Dockerfile
  BUILD_CONTEXT: .
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  # License check must pass before building
  license-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check for license headers
      uses: apache/skywalking-eyes@v0.4.0
      with:
        mode: check
        config: .licenserc.yaml

  build-and-push:
    runs-on: ubuntu-latest
    needs: license-check  # ðŸš« Build won't start if license check fails
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      if: github.event_name != 'pull_request'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Azure Container Registry
      if: github.event_name != 'pull_request'
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # For semantic version tags (v1.2.3)
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # For main branch, use pre-release versioning
          type=raw,value=latest,enable={{is_default_branch}}
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=ref,event=branch,enable={{is_default_branch}}
          type=ref,event=branch,suffix=-{{sha}},enable={{is_default_branch}}
          # For PRs, use pr-<number>
          type=ref,event=pr,prefix=pr-

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.BUILD_CONTEXT }}
        file: ${{ env.DOCKERFILE_PATH }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ env.PLATFORMS }}

    - name: Output image digest
      if: github.event_name != 'pull_request'
      run: echo ${{ steps.build.outputs.digest }}
